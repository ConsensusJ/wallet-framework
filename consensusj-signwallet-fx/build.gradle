plugins {
    id 'groovy'
    id 'application'
    id 'org.openjfx.javafxplugin'           version '0.0.8'
    id 'org.beryx.jlink'                    version '2.17.1'
    id 'org.javamodularity.moduleplugin'    version "1.5.0"
}

def appName = 'ConsensusJSigningWallet'
mainClassName = "signwalletfx.SignWalletFxApp"
//mainClassName = "$moduleName/signwalletfx.SignWalletFxApp"

sourceCompatibility = 9
targetCompatibility = 9

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'

dependencies {
    implementation project(':airgaplib')
    implementation (project(':airgapfx')) {
        exclude group: 'org.openjfx'
    }

    implementation ("org.consensusj.supernaut:supernautfx:${supernautVersion}")  {
        exclude group: 'org.openjfx'
    }


    implementation "${bitcoinjGroup}:${bitcoinjArtifact}:${bitcoinjVersion}"
    implementation ("${bitcoinjGroup}:${bitcoinjWalletFxArtifact}:${bitcoinjVersion}") {
        exclude group: 'org.openjfx'    
    }

    implementation "io.micronaut:micronaut-inject-java:${micronautVersion}"
    implementation "javax.inject:javax.inject:1"

    implementation 'com.google.guava:guava:27.1-android'
    implementation 'de.jensd:fontawesomefx:8.0.0'

    implementation 'com.google.zxing:core:3.4.0'
    implementation 'com.google.zxing:javase:3.4.0'

    implementation ("com.github.sarxos:webcam-capture:0.3.12") {
        exclude group: 'com.nativelibs4java', module: 'bridj'
    }

    implementation "org.slf4j:slf4j-api:${slf4jVersion}"
    implementation "org.slf4j:slf4j-jdk14:${slf4jVersion}"

    annotationProcessor "io.micronaut:micronaut-inject-java:${micronautVersion}"

    testCompile group: 'junit', name: 'junit', version: '4.12'
}

patchModules.config = [
        "java.annotation=jsr305-3.0.2.jar"
]

javafx {
    version = javaFxVersion
    modules = ['javafx.graphics', 'javafx.controls', 'javafx.fxml', 'javafx.swing']
}

def os = org.gradle.internal.os.OperatingSystem.current()

jlink {
    addExtraDependencies("javafx")
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = appName
        jvmArgs = []
    }
    mergedModule {
        requires 'java.logging'
        requires 'java.desktop'

        requires 'javafx.graphics'
        requires 'javafx.controls'
        requires 'javafx.fxml'

        forceMerge 'org.slf4j'
    }
    jpackage {
        // See https://badass-jlink-plugin.beryx.org/releases/latest/#_jpackage for
        // where the plugin's jpackage task finds the path to the jpackage tool by default
        if (Boolean.getBoolean('download.jpackage')) {
            jpackageHome = rootProject.ext.jpackageHome
        }
        skipInstaller = false

        // Massage version string to be compatible with jpackage installers
        // for the current OS platform
        def appVersionForJpackage = normalizeAppVersion(version)

        imageOptions = ["--verbose", "--app-version", appVersionForJpackage]
        installerOptions = ["--app-version", appVersionForJpackage]
        if (os.macOsX) {
            imageOptions += [ '--resource-dir', "${projectDir}/src/macos/resource-dir" ]
            if (signJPackageImages) {
                imageOptions += [ '--mac-sign' ]
            }
        }
    }
}

if (Boolean.getBoolean('download.jpackage')) {
    jpackage.dependsOn rootProject.expandJPackage
}
